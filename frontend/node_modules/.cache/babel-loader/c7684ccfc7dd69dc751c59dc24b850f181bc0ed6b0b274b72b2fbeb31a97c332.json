{"ast":null,"code":"var _jsxFileName = \"C:\\\\SRINATH\\\\Guessing number\\\\frontend\\\\src\\\\Components\\\\GuessingGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './GuessingGame.css';\nimport profile from '../Assets/profile.png';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateUniqueNumber = () => {\n  const digits = '0123456789'.split('');\n  let number = '';\n  while (number.length < 4) {\n    const index = Math.floor(Math.random() * digits.length);\n    number += digits[index];\n    digits.splice(index, 1);\n  }\n  console.log(number);\n  return number;\n};\nModal.setAppElement('#root');\nconst GuessingGame = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [guess, setGuess] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [guesses, setGuesses] = useState(0);\n  const [bestScore, setBestScore] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n  const [timeTaken, setTimeTaken] = useState(null);\n  const [timer, setTimer] = useState(0);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    const fetchBestScore = async () => {\n      const response = await axios.get('http://localhost:5000/api/scores/best');\n      setBestScore(response.data);\n    };\n    fetchBestScore();\n  }, []);\n  useEffect(() => {\n    if (startTime) {\n      intervalRef.current = setInterval(() => {\n        setTimer(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [startTime]);\n  const startNewGame = () => {\n    const newNumber = generateUniqueNumber();\n    setNumber(newNumber);\n    setGuess('');\n    setFeedback('');\n    setGuesses(0);\n    setStartTime(Date.now());\n    setTimeTaken(null);\n    setTimer(0);\n  };\n  const restartGame = () => {\n    setName('');\n    startNewGame();\n  };\n  const calculateScore = (time, guesses) => {\n    const weightTime = 2;\n    const weightGuesses = 1;\n\n    // Maximum possible values\n    const maxTime = 300; // e.g., 300 seconds\n    const maxGuesses = 20; // e.g., 20 guesses\n\n    // Calculate the weighted score\n    let rawScore = (weightTime * time + weightGuesses * guesses) / (weightTime + weightGuesses);\n\n    // Normalize to a 100-point scale\n    let maxRawScore = (weightTime * maxTime + weightGuesses * maxGuesses) / (weightTime + weightGuesses);\n    let normalizedScore = (1 - rawScore / maxRawScore) * 100;\n\n    // Ensure the score is within bounds\n    normalizedScore = Math.max(0, Math.min(100, normalizedScore));\n    return normalizedScore;\n  };\n  const handleGuess = async () => {\n    console.log('User Guess:', guess);\n    let newFeedback = '';\n    let computerNumber = number.split('');\n    let userGuess = guess.split('');\n    let correct = 0;\n    let incorrect = 0;\n    for (let i = 0; i < userGuess.length; i++) {\n      if (userGuess[i] === computerNumber[i]) {\n        correct++;\n        computerNumber[i] = null;\n      } else if (computerNumber.includes(userGuess[i])) {\n        incorrect++;\n      }\n    }\n    newFeedback = '+'.repeat(correct) + '-'.repeat(incorrect);\n    setFeedback(newFeedback);\n    setGuesses(guesses + 1);\n    if (correct === 4) {\n      const endTime = Date.now();\n      const totalTimeTaken = (endTime - startTime) / 1000;\n      setTimeTaken(totalTimeTaken);\n      const score = calculateScore(totalTimeTaken, guesses + 1);\n      const response = await axios.post('http://localhost:5000/api/scores', {\n        name,\n        score,\n        guesses: guesses + 1,\n        timeTaken: totalTimeTaken\n      });\n      setBestScore(response.data);\n      clearInterval(intervalRef.current);\n      setIsModalOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Guess the Number Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), !number ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewGame,\n        children: \"Start New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Guess the 4-digit number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Time: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile,\n            alt: \"User Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"4\",\n        value: guess,\n        onChange: e => setGuess(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuess,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        children: [\"Feedback: \", feedback]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Guesses: \", guesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), timeTaken !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"congratulations\",\n        children: [\"Congratulations \", name, \"! You've guessed the number in \", guesses, \" tries and \", timeTaken.toFixed(2), \" seconds.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"srinath\",\n      children: \"Copyright @srinath 2024 - All Rights Reserved.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Best Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), bestScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"best-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", bestScore.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", bestScore.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Guesses: \", bestScore.guesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Taken: \", bestScore.timeTaken, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(GuessingGame, \"i70RK10+KHnB9hM8gpS3LugubWk=\");\n_c = GuessingGame;\nexport default GuessingGame;\nvar _c;\n$RefreshReg$(_c, \"GuessingGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","profile","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","generateUniqueNumber","digits","split","number","length","index","Math","floor","random","splice","console","log","setAppElement","GuessingGame","_s","name","setName","setNumber","guess","setGuess","feedback","setFeedback","guesses","setGuesses","bestScore","setBestScore","startTime","setStartTime","timeTaken","setTimeTaken","timer","setTimer","isModalOpen","setIsModalOpen","intervalRef","fetchBestScore","response","get","data","current","setInterval","Date","now","clearInterval","startNewGame","newNumber","restartGame","calculateScore","time","weightTime","weightGuesses","maxTime","maxGuesses","rawScore","maxRawScore","normalizedScore","max","min","handleGuess","newFeedback","computerNumber","userGuess","correct","incorrect","i","includes","repeat","endTime","totalTimeTaken","score","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","alt","maxLength","toFixed","isOpen","onRequestClose","_c","$RefreshReg$"],"sources":["C:/SRINATH/Guessing number/frontend/src/Components/GuessingGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './GuessingGame.css';\nimport profile from '../Assets/profile.png';\nimport Modal from 'react-modal';\n\nconst generateUniqueNumber = () => {\n    const digits = '0123456789'.split('');\n    let number = '';\n    \n    while (number.length < 4) {\n        const index = Math.floor(Math.random() * digits.length);\n        number += digits[index];\n        digits.splice(index, 1);\n    }\n    console.log(number);\n    return number;\n};\n\nModal.setAppElement('#root');\n\nconst GuessingGame = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [guess, setGuess] = useState('');\n    const [feedback, setFeedback] = useState('');\n    const [guesses, setGuesses] = useState(0);\n    const [bestScore, setBestScore] = useState(null);\n    const [startTime, setStartTime] = useState(null);\n    const [timeTaken, setTimeTaken] = useState(null);\n    const [timer, setTimer] = useState(0);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const intervalRef = useRef(null);\n\n    useEffect(() => {\n        const fetchBestScore = async () => {\n            const response = await axios.get('http://localhost:5000/api/scores/best');\n            setBestScore(response.data);\n        };\n\n        fetchBestScore();\n    }, []);\n\n    useEffect(() => {\n        if (startTime) {\n            intervalRef.current = setInterval(() => {\n                setTimer(Math.floor((Date.now() - startTime) / 1000));\n            }, 1000);\n        } else {\n            clearInterval(intervalRef.current);\n        }\n        \n        return () => clearInterval(intervalRef.current);\n    }, [startTime]);\n\n    const startNewGame = () => {\n        const newNumber = generateUniqueNumber();\n        setNumber(newNumber);\n        setGuess('');\n        setFeedback('');\n        setGuesses(0);\n        setStartTime(Date.now());\n        setTimeTaken(null);\n        setTimer(0);\n    };\n\n    const restartGame = () => {\n        setName('');\n        startNewGame();\n    };\n\n   const calculateScore = (time, guesses) => {\n        const weightTime = 2;\n        const weightGuesses = 1;\n\n        // Maximum possible values\n        const maxTime = 300; // e.g., 300 seconds\n        const maxGuesses = 20; // e.g., 20 guesses\n\n        // Calculate the weighted score\n        let rawScore = (weightTime * time + weightGuesses * guesses) / (weightTime + weightGuesses);\n\n        // Normalize to a 100-point scale\n        let maxRawScore = (weightTime * maxTime + weightGuesses * maxGuesses) / (weightTime + weightGuesses);\n        let normalizedScore = (1 - rawScore / maxRawScore) * 100;\n\n        // Ensure the score is within bounds\n        normalizedScore = Math.max(0, Math.min(100, normalizedScore));\n        \n        return normalizedScore;\n    };\n    const handleGuess = async () => {\n        console.log('User Guess:', guess);\n        let newFeedback = '';\n        let computerNumber = number.split('');\n        let userGuess = guess.split('');\n        let correct = 0;\n        let incorrect = 0;\n\n        for (let i = 0; i < userGuess.length; i++) {\n            if (userGuess[i] === computerNumber[i]) {\n                correct++;\n                computerNumber[i] = null;\n            } else if (computerNumber.includes(userGuess[i])) {\n                incorrect++;\n            }\n        }\n\n        newFeedback = '+'.repeat(correct) + '-'.repeat(incorrect);\n        setFeedback(newFeedback);\n        setGuesses(guesses + 1);\n\n        if (correct === 4) {\n            const endTime = Date.now();\n            const totalTimeTaken = (endTime - startTime) / 1000;\n            setTimeTaken(totalTimeTaken);\n            const score = calculateScore(totalTimeTaken, guesses + 1);\n\n            const response = await axios.post('http://localhost:5000/api/scores', {\n                name,\n                score,\n                guesses: guesses + 1,\n                timeTaken: totalTimeTaken\n            });\n\n            setBestScore(response.data);\n            clearInterval(intervalRef.current);\n            setIsModalOpen(true);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Guess the Number Game</h1>\n            {!number ? (\n                <>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                    <button onClick={startNewGame}>Start New Game</button>\n                </>\n            ) : (\n                <>\n                    <h2>Guess the 4-digit number</h2>\n                    <div className=\"timer\"><h2>Time: {timer}s</h2></div>\n                    <div className=\"userName\">\n                        <span><img src={profile} alt=\"User Profile\" /></span>\n                        <p>{name}</p>\n                    </div>\n                    <input\n                        type=\"text\"\n                        maxLength=\"4\"\n                        value={guess}\n                        onChange={(e) => setGuess(e.target.value)}\n                    />\n                    <button onClick={handleGuess}>Submit Guess</button>\n                    <p className=\"feedback\">Feedback: {feedback}</p>\n                    <p>Guesses: {guesses}</p>\n                    {timeTaken !== null && (\n                        <p className=\"congratulations\">Congratulations {name}! You've guessed the number in {guesses} tries and {timeTaken.toFixed(2)} seconds.</p>\n                    )}\n                    <button onClick={restartGame}>Restart Game</button>\n                </>\n            )}\n            <p className=\"srinath\">Copyright @srinath 2024 - All Rights Reserved.</p>\n\n            <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)} className=\"modal\">\n                <h2>Best Score</h2>\n                {bestScore && (\n                    <div className=\"best-score\">\n                        <p>Name: {bestScore.name}</p>\n                        <p>Score: {bestScore.score}</p>\n                        <p>Guesses: {bestScore.guesses}</p>\n                        <p>Time Taken: {bestScore.timeTaken}s</p>\n                    </div>\n                )}\n                <button onClick={() => setIsModalOpen(false)}>Close</button>\n            </Modal>\n        </div>\n    );\n};\n\nexport default GuessingGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}