{"ast":null,"code":"var _jsxFileName = \"C:\\\\SRINATH\\\\Guessing number\\\\frontend\\\\src\\\\Components\\\\GuessingGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './GuessingGame.css';\nimport profile from '../Assets/profile.png';\nimport Modal from 'react-modal';\nimport { FaTimes } from 'react-icons/fa'; // Import the close icon from react-icons\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateUniqueNumber = () => {\n  const digits = '0123456789'.split('');\n  let number = '';\n  while (number.length < 4) {\n    const index = Math.floor(Math.random() * digits.length);\n    number += digits[index];\n    digits.splice(index, 1);\n  }\n  console.log(number);\n  return number;\n};\nModal.setAppElement('#root');\nconst GuessingGame = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [guess, setGuess] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [guesses, setGuesses] = useState(0);\n  const [bestScore, setBestScore] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n  const [timer, setTimer] = useState(0);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const intervalRef = useRef(null);\n\n  // useEffect(() => {\n  //     const fetchBestScore = async () => {\n  //         const response = await axios.get('http://localhost:5000/api/scores/best');\n  //         setBestScore(response.data);\n  //     };\n\n  //     fetchBestScore();\n  // }, []);\n\n  useEffect(() => {\n    if (startTime) {\n      intervalRef.current = setInterval(() => {\n        setTimer(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [startTime]);\n  const startNewGame = () => {\n    const newNumber = generateUniqueNumber();\n    setNumber(newNumber);\n    setGuess('');\n    setFeedback('');\n    setGuesses(0);\n    setStartTime(Date.now());\n    setTimer(0);\n  };\n  const restartGame = () => {\n    startNewGame();\n  };\n  const calculateScore = (time, guesses) => {\n    const weightTime = 2;\n    const weightGuesses = 1;\n    return (weightTime * time + weightGuesses * guesses) / (weightTime + weightGuesses);\n  };\n  const handleGuess = async () => {\n    console.log('User Guess:', guess);\n    let newFeedback = '';\n    let computerNumber = number.split('');\n    let userGuess = guess.split('');\n    let correct = 0;\n    let feedbackArray = ['.', '.', '.', '.'];\n    for (let i = 0; i < userGuess.length; i++) {\n      if (userGuess[i] === computerNumber[i]) {\n        feedbackArray[i] = '+';\n        correct++;\n        computerNumber[i] = null;\n      } else if (computerNumber.includes(userGuess[i])) {\n        feedbackArray[i] = '-';\n      }\n    }\n    newFeedback = feedbackArray.join('');\n    setFeedback(newFeedback);\n    setGuesses(guesses + 1);\n    if (correct === 4) {\n      const endTime = Date.now();\n      const totalTimeTaken = (endTime - startTime) / 1000;\n      const score = calculateScore(totalTimeTaken, guesses + 1);\n      const response = await axios.post('http://localhost:5000/api/scores', {\n        name,\n        score,\n        guesses: guesses + 1,\n        timeTaken: totalTimeTaken\n      });\n      setBestScore(response.data);\n      clearInterval(intervalRef.current);\n      setIsModalOpen(true);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    // window.location.reload();\n  };\n  const closeModals = () => {\n    setIsModalOpen(false);\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Guess the Number Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), !number ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewGame,\n        children: \"Start New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Guess the 4-digit number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"modal-close-button\",\n        onClick: closeModals,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Time: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile,\n            alt: \"User Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"4\",\n        value: guess,\n        onChange: e => setGuess(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuess,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        children: [\"Feedback: \", feedback]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Guesses: \", guesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Best Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), bestScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"best-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", bestScore.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", bestScore.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Guesses: \", bestScore.guesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Taken: \", bestScore.timeTaken, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n_s(GuessingGame, \"iBILx6vu2goWYuAUU6R08qEvWi8=\");\n_c = GuessingGame;\nexport default GuessingGame;\nvar _c;\n$RefreshReg$(_c, \"GuessingGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","profile","Modal","FaTimes","jsxDEV","_jsxDEV","Fragment","_Fragment","generateUniqueNumber","digits","split","number","length","index","Math","floor","random","splice","console","log","setAppElement","GuessingGame","_s","name","setName","setNumber","guess","setGuess","feedback","setFeedback","guesses","setGuesses","bestScore","setBestScore","startTime","setStartTime","timer","setTimer","isModalOpen","setIsModalOpen","intervalRef","current","setInterval","Date","now","clearInterval","startNewGame","newNumber","restartGame","calculateScore","time","weightTime","weightGuesses","handleGuess","newFeedback","computerNumber","userGuess","correct","feedbackArray","i","includes","join","endTime","totalTimeTaken","score","response","post","timeTaken","data","closeModal","closeModals","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","alt","maxLength","isOpen","onRequestClose","_c","$RefreshReg$"],"sources":["C:/SRINATH/Guessing number/frontend/src/Components/GuessingGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './GuessingGame.css';\nimport profile from '../Assets/profile.png';\nimport Modal from 'react-modal';\nimport { FaTimes } from 'react-icons/fa'; // Import the close icon from react-icons\n\nconst generateUniqueNumber = () => {\n    const digits = '0123456789'.split('');\n    let number = '';\n    \n    while (number.length < 4) {\n        const index = Math.floor(Math.random() * digits.length);\n        number += digits[index];\n        digits.splice(index, 1);\n    }\n    console.log(number);\n    return number;\n};\n\nModal.setAppElement('#root');\n\nconst GuessingGame = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [guess, setGuess] = useState('');\n    const [feedback, setFeedback] = useState('');\n    const [guesses, setGuesses] = useState(0);\n    const [bestScore, setBestScore] = useState(null);\n    const [startTime, setStartTime] = useState(null);\n    const [timer, setTimer] = useState(0);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const intervalRef = useRef(null);\n\n    // useEffect(() => {\n    //     const fetchBestScore = async () => {\n    //         const response = await axios.get('http://localhost:5000/api/scores/best');\n    //         setBestScore(response.data);\n    //     };\n\n    //     fetchBestScore();\n    // }, []);\n\n    useEffect(() => {\n        if (startTime) {\n            intervalRef.current = setInterval(() => {\n                setTimer(Math.floor((Date.now() - startTime) / 1000));\n            }, 1000);\n        } else {\n            clearInterval(intervalRef.current);\n        }\n        \n        return () => clearInterval(intervalRef.current);\n    }, [startTime]);\n\n    const startNewGame = () => {\n        const newNumber = generateUniqueNumber();\n        setNumber(newNumber);\n        setGuess('');\n        setFeedback('');\n        setGuesses(0);\n        setStartTime(Date.now());\n        setTimer(0);\n    };\n\n    const restartGame = () => {\n        startNewGame();\n    };\n\n    const calculateScore = (time, guesses) => {\n        const weightTime = 2;\n        const weightGuesses = 1;\n        return (weightTime * time + weightGuesses * guesses) / (weightTime + weightGuesses);\n    };\n\n    const handleGuess = async () => {\n        console.log('User Guess:', guess);\n        let newFeedback = '';\n        let computerNumber = number.split('');\n        let userGuess = guess.split('');\n        let correct = 0;\n        let feedbackArray = ['.', '.', '.', '.'];\n\n        for (let i = 0; i < userGuess.length; i++) {\n            if (userGuess[i] === computerNumber[i]) {\n                feedbackArray[i] = '+';\n                correct++;\n                computerNumber[i] = null;\n            } else if (computerNumber.includes(userGuess[i])) {\n                feedbackArray[i] = '-';\n            }\n        }\n\n        newFeedback = feedbackArray.join('');\n        setFeedback(newFeedback);\n        setGuesses(guesses + 1);\n\n        if (correct === 4) {\n            const endTime = Date.now();\n            const totalTimeTaken = (endTime - startTime) / 1000;\n            const score = calculateScore(totalTimeTaken, guesses + 1);\n\n            const response = await axios.post('http://localhost:5000/api/scores', {\n                name,\n                score,\n                guesses: guesses + 1,\n                timeTaken: totalTimeTaken\n            });\n\n            setBestScore(response.data);\n            clearInterval(intervalRef.current);\n            setIsModalOpen(true);\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        // window.location.reload();\n    };\n    const closeModals = () => {\n        setIsModalOpen(false);\n        window.location.reload();\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Guess the Number Game</h1>\n            {!number ? (\n                <>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                    <button onClick={startNewGame}>Start New Game</button>\n                </>\n            ) : (\n                <>\n                    <h2>Guess the 4-digit number</h2>\n                    <span className=\"modal-close-button\" onClick={closeModals}>X</span>\n                    <div className=\"timer\"><h2>Time: {timer}s</h2></div>\n                    <div className=\"userName\">\n                        <span><img src={profile} alt=\"User Profile\" /></span>\n                        <p>{name}</p>\n                    </div>\n                    <input\n                        type=\"text\"\n                        maxLength=\"4\"\n                        value={guess}\n                        onChange={(e) => setGuess(e.target.value)}\n                    />\n                    <button onClick={handleGuess}>Submit Guess</button>\n                    <p className=\"feedback\">Feedback: {feedback}</p>\n                    <p>Guesses: {guesses}</p>\n                    <button onClick={restartGame}>Restart Game</button>\n                </>\n            )}\n\n            <Modal isOpen={isModalOpen} onRequestClose={closeModal} className=\"modal\">\n                <h2>Best Score</h2>\n                {bestScore && (\n                    <div className=\"best-score\">\n                        <p>Name: {bestScore.name}</p>\n                        <p>Score: {bestScore.score}</p>\n                        <p>Guesses: {bestScore.guesses}</p>\n                        <p>Time Taken: {bestScore.timeTaken}s</p>\n                    </div>\n                )}\n                <button onClick={closeModal}><FaTimes /></button>\n            </Modal>\n        </div>\n    );\n};\n\nexport default GuessingGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}